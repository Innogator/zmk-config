/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define NAVETC 1
#define NUMBERS 2
#define SYMBOLS 3
#define FUNCTIONS 4

&mt {
        flavor = "tap-preferred";
        tapping_term_ms = <150>;
};

&sk {
        ignore-modifiers;
};

&caps_word {
        continue-list = <UNDERSCORE MINUS BSPC>;
};

/ {
        macros {
                // sometimes my device thinks a modifier is being held down
                // pressing all modifiers fixes it.
                unstick: unstick {
                        label = "ZM_unstick";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
                };
        };

        combos {
               compatible = "zmk,combos";
               combo_tab {
                        timeout-ms = <50>;
                        key-positions = <0 1>;
                        bindings = <&kp TAB>;
               };
               combo_esc {
                        timeout-ms = <50>;
                        key-positions = <16 17>;
                        bindings = <&gresc>;
               };
                combo_caps {
                        timeout-ms = <50>;
                        key-positions = <31 32>;
                        bindings = <&caps_word>;
               };
               combo_bksp {
                        timeout-ms = <50>;
                        key-positions = <17 18>;
                        bindings = <&kp BSPC>;
               };
               combo_double_quote {
                       timeout-ms = <50>;
                       key-positions = <18 19>;
                       bindings = <&kp DQT>;
               };
               combo_single_quote {
                        timeout-ms = <50>;
                        key-positions = <28 29>;
                        bindings = <&kp SQT>;
               };
        };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// ---------------------------------------------------------------------------------------------------
// |    q    |    w    |    e     |    r    |  t  |   |  y  |    u    |    i     |    o    |    p    |
// |    a    |    s    |    d     |    f    |  g  |   |  h  |    j    |    k     |   l     |    ;    |
// |    z    |    x    |    c     |    v    |  b  |   |  n  |    m    |    ,     |    .    |    /    |
//                         | NAV - DEL | NUM - ENT | RSFT - SPACE | SYM |
                        bindings = <
        &kp Q   &kp W   &kp E   &kp R   &kp T   &kp Y   &kp U   &kp I      &kp O      &kp P
        &kp A   &kp S   &kp D   &kp F   &kp G   &kp H   &kp J   &kp K      &kp L      &kp SEMI
        &kp Z   &kp X   &kp C   &kp V   &kp B   &kp N   &kp M   &kp COMMA  &kp PERIOD &kp FSLH
                        &lt NAVETC DEL   &lt NUMBERS ENTER &mt RSHFT SPACE    &sl SYMBOLS
                        >;
                };

                navetc_layer {
// -------------------------------------------------------------------------
// | tab  |      |  del  | c-r   | c-y   |   |    |          | home | pgup | end  |  BSPC  |
// | lgui | lalt | lctrl | lsft  |       |   |    |   left   | down |  up  | rght |  DEL   |
// | c-z  | c-x  | c-c   | c-v   |       |   |    | LC(BSPC) | prev | pgdn | next |   `    |
//                       | trans | trans |   | trans |   FN   |
                        bindings = <
        &kp TAB   &trans    &kp DEL   &kp LC(R) &kp LC(Y)   &kp LC(Y)    &kp HOME      &kp PG_UP &kp END          &kp BSPC
        &sk LGUI  &sk LALT  &sk LCTRL &sk LSHFT &none       &kp LEFT     &kp DOWN      &kp UP    &kp RIGHT        &kp DEL
        &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &none       &kp LC(BSPC) &kp C_AC_BACK &kp PG_DN &kp C_AC_FORWARD &kp GRAVE
                                      &trans    &trans      &trans       &lt FUNCTIONS TILDE
                        >;

                };
                
                number_layer {
// ---------------------------------------------------------------------------
// |   1  |   2  |   3   |   4   |   5   |   |  6  |  7  |  8  |  9  |   0   |
// | lctl | lalt | lctrl | lsft  |       |   |  -  |  4  |  5  |  6  |   =   |
// |      |      |       |       |       |   |  +  |  1  |  2  |  3  |   \   |
//                       | trans | trans |   |  0  |  .  |
                        bindings = <
        &kp N1    &kp N2   &kp N3     &kp N4    &kp N5  &kp N6     &kp N7 &kp N8 &kp N9 &kp N0
        &sk LGUI  &sk LALT  &sk LCTRL &sk LSHFT &none   &kp MINUS  &kp N4 &kp N5 &kp N6 &kp EQUAL
        &none     &none    &none      &none     &none   &kp PLUS   &kp N1 &kp N2 &kp N3 &kp BSLH
                                      &trans   &trans    &kp DOT &kp N0
                        >;
                };                

                symbol_layer {
// -------------------------------------------------------------------------
// |   !  |   @  |   #   |   $   |   %   |   |  ^  |  &  |  *  |  (  |  )  |
// | lctl | lalt | lctrl | lsft  |   |   |   |  -  |  =  |  {  |  }  |  '  |
// |      |      |       |       |       |   |  +  |  _  |  [  |  ]  |  \  |
//                       | trans | trans |   |  trans  |  ~ |

                        bindings = <
        &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR
        &sk LGUI  &sk LALT  &sk LCTRL &sk LSHFT &kp PIPE   &kp MINUS  &kp EQUAL &kp LBRC   &kp RBRC  &kp SQT
        &none     &none     &none     &none     &none      &kp UNDER  &kp PLUS  &kp LBKT   &kp RBKT  &kp BSLH
                           &lt FUNCTIONS DEL   &trans           &trans  &trans

                        >;
                };

                function_layer {
// -------------------------------------------------------------------------
// |      |  F1  |  F2  |  F3  |  F4  |   | vol up | prev | stop  |     |  printscreen  |
// |      |  Ft  |  F6  |  F7  |  F8  |   | vol dn | next | play  |     |               |
// |      |  F9  |  F10 |  F11 |  F13 |   | mute   |      | pause |     |    unstick    |
//                    |  bspc | trans |   | trans  | trans |
                        bindings = <
        &kp F1 &kp F2  &kp F3  &kp F4  &none   &kp C_VOL_UP &kp C_PREV &kp C_STOP  &none &kp PSCRN
        &kp F5 &kp F6  &kp F7  &kp F8  &none   &kp C_VOL_DN &kp C_NEXT &kp C_PLAY  &none &none
        &kp F9 &kp F10 &kp F11 &kp F12 &none   &kp C_MUTE   &none      &kp C_PAUSE &none &unstick
                              &trans  &trans   &trans  &trans
                        >;

                };
        };
};
